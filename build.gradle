import org.gradle.api.internal.artifacts.dependencies.DefaultSelfResolvingDependency

apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'idea'

version = '1.1.1'
group = 'org.gradle.extracted'
/*
 * Copyright 2010 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

configurations {
    reports
    testFixtures
}

apply from: 'buildScripts/libraries.gradle'

dependencies {
    groovy libraries.groovy_depends
    testCompile libraries.jmock, libraries.spock
    compile gradleApi()
    testCompile 'org.jruby.ext.posix:jnr-posix:1.1.4'
    testCompile libraries.xmlunit, 'net.sourceforge.nekohtml:nekohtml:1.9.14'
    testCompile group: 'junit', name: 'junit', version: '4.8.2'
}

test {
    exclude 'org/gradle/api/internal/tasks/testing/junit/ATestClass*.*'
    exclude 'org/gradle/api/internal/tasks/testing/junit/ABroken*TestClass*.*'
    jvmArgs '-Xms128m', '-Xmx256m', '-XX:+HeapDumpOnOutOfMemoryError'
}

if(new File('serverUpload.gradle').exists()){
    apply from:'serverUpload.gradle'
}